http {
    include /etc/nginx/mime.types;  # 기본 MIME 타입 (필수)

    server {
        listen 80;
        server_name moneywise-backend.shop ec2-3-34-198-121.ap-northeast-2.compute.amazonaws.com;

        location / {
            # CORS 헤더 추가 - Spring Security와 일치
            # $http_origin 변수를 사용하여 동적으로 Origin 헤더 처리
            # 허용된 origin인지 확인
            set $cors_origin '';
            if ($http_origin ~ '^http://(localhost:3000|localhost:5500|localhost:5501)$') {
                set $cors_origin $http_origin;
            }

            if ($http_origin = 'https://money-wise-delta.vercel.app') {
                set $cors_origin $http_origin;
            }

            if ($request_method = 'OPTIONS') {
                # 프리플라이트 요청 처리
                # Spring Security의 설정과 일치시킴
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # 기존 프록시 설정
            proxy_pass http://backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }
    }
}

events {
    worker_connections 1024;
}